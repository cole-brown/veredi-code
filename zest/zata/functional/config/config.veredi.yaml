--- !metadata
record-type: veredi.config
version: 2020-05-26

source: veredi.config
author: Cole Brown
date:   2020-07-19

system: configuration
name: veredi.config
display-name: Veredi Configuration


--- !configuration

data:
  repository:
    type: veredi.repository.file-tree
    directory: ../repository/file-tree
    sanitize: veredi.paths.sanitize.human
  serdes: veredi.serdes.yaml
  codec: veredi.codec.codec


registration:
  - register:
      name: Veredi
      dotted: veredi
    path:
      root: ../../../..  # Relative from here.
      registrees:
        run: [ __register__ ]
        test: [ __register_ut_ ]
      registrars:
        run: [ __registrar__ ]
        test: [ __registrar_ut_ ]
      # ignores:
      #   - strings
      #   - !regex "\bregex ?(here)?"
      #   - data
      #   - !regex "^[a-z]+_test"
    # unit-test: true/false to force
  # - register: my-module
  #   path:
  #     run: [ register ]


rules:
  type: veredi.rules.d20.pf2.info
  skill: veredi.rules.d20.pf2.skill.system
  combat: veredi.rules.d20.pf2.combat.system

  ability: veredi.rules.d20.pf2.ability
  health: veredi.rules.d20.pf2.health
  movement: veredi.rules.d20.pf2.movement


engine:
  # systems:
  #   # Names can be anything you want?
  #   math: veredi.math.system

  time:
    timeouts:
      # Duration Format Examples:
      #   1 second
      #   2 seconds
      #   1 minute, 2 seconds
      #   1 hour, 14 minutes, 2 seconds
      #   2 hours 1 seconds
      #   2h1m1s
      #   1s
      #   55m
      #   12 # (bare numbers will be treated as seconds)
      # Tag "!duration" is optional.
      default: !duration 1 second
      synthesis: 5 seconds
      mitosis: !duration 5 seconds
      autophagy: !duration 5 seconds
      apoptosis: !duration 5 seconds


server:
  mediator:
    type: veredi.interface.mediator.websocket.server
    serdes: veredi.serdes.json
    codec: veredi.codec.codec
    hostname: localhost
    port: 8888
    ssl: false

  input:
    type: veredi.interface.input.system
    command: veredi.interface.input.commander
    history: veredi.interface.input.historian
    parser:
      math: veredi.math.d20.parser

  output:
    type: veredi.interface.output.system


client:
  mediator:
    type: veredi.interface.mediator.websocket.client
    serdes: veredi.serdes.json
    codec: veredi.codec.codec
    hostname: localhost
    port: 8888
    ssl: false

# and more?
